#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

#define MAX_COMMAND_LENGTH 100

void execute_command(char *command) {
    pid_t forkVar = fork();

    if (forkVar < 0)
    {
        perror("Fork failed");
        exit(EXIT_FAILURE);
    } 
    else if (forkVar == 0)
    {
        char *args[] = {command, NULL};
        execvp(args[0], args);
        perror("Execution failed");
        exit(EXIT_FAILURE);
    }
    else 
    {
        wait(NULL);
    }
}

int main() {
    char command[MAX_COMMAND_LENGTH];

    while (1) {
        printf("$ ");
        fgets(command, MAX_COMMAND_LENGTH, stdin);
        command[strcspn(command, "\n")] = '\0';
        pid_t forkVar = fork();
        
    if (forkVar < 0)
    {
        perror("Fork failed");
        exit(EXIT_FAILURE);
    } 
    else if (forkVar == 0)
    {
        char *args[] = {command, NULL};
        execvp(args[0], args);
        perror("Execution failed");
        exit(EXIT_FAILURE);
    }
    else 
    {
        wait(NULL);
    }
    }

    return 0;
}